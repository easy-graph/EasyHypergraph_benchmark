name: Build and download wheel
on: workflow_dispatch


jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheels:
      name: Build wheels on ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          # macos-13 is an intel runner, macos-14 is apple silicon
          os: [ ubuntu-latest, windows-latest, macos-latest, macos-13, macos-14]
#          modify python version in project.toml
      steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        with:
          output-dir: dist/


      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: dist/


  upload_pypi:
      needs: [ build_wheels, build_sdist ]
      runs-on: ubuntu-latest
      environment: pypi
      permissions:
        id-token: write
      steps:
        - uses: actions/download-artifact@v4
          with:
            # unpacks all CIBW artifacts into dist/
            pattern: cibw-*
            path: dist/
            merge-multiple: true

#        - name: Upload to PyPI
#          env:
#              TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
#              TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
#          run: |
#              python -m pip install --upgrade pip twine
#              twine upload dist/*



